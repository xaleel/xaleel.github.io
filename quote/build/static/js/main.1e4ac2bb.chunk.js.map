{"version":3,"sources":["index.js"],"names":["App","props","state","color","Math","floor","random","quotes","quote","author","button","bind","rQuote","setQuotes","fetch","then","response","json","data","this","setState","console","log","allQuotes","map","x","allAuthors","length","e","preventDefault","document","querySelector","animate","opacity","text","id","style","backgroundColor","className","onClick","getQuotes","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"oNAIMA,E,kDACF,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACbC,MAAM,OAAD,OAASC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAzB,aAA6CF,KAAKC,MAAsB,IAAhBD,KAAKE,UAA7D,aAAiFF,KAAKC,MAAsB,IAAhBD,KAAKE,UAAjG,KACLC,OAAQ,GACRC,MAAO,GACPC,OAAQ,IAER,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBACd,EAAKC,OAAS,EAAKA,OAAOD,KAAZ,gBACd,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBAVD,E,qDAalB,WAAqB,IAAD,OAClBG,MAAM,0IACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKL,UAAUK,Q,uBAGjC,SAAUA,GACRC,KAAKC,SAAS,CAACb,OAASW,EAAKX,SAC7Bc,QAAQC,IAAIH,KAAKjB,MAAMK,U,oBAGzB,WACE,IAAIgB,EAAYJ,KAAKjB,MAAMK,OAAOiB,KAAI,SAAAC,GAAC,OAAIA,EAAEjB,SACzCkB,EAAaP,KAAKjB,MAAMK,OAAOiB,KAAI,SAAAC,GAAC,OAAIA,EAAEhB,UAC1CH,EAASF,KAAKC,MAAMD,KAAKE,SAAWiB,EAAUI,QAClDR,KAAKC,SAAS,CAACZ,MAAOe,EAAUjB,GAASG,OAAQiB,EAAWpB,O,oBAG9D,SAAOsB,GAAG,IAAD,OACPA,EAAEC,iBACFC,SAASC,cAAc,UAAUC,QAAQ,CAAEC,QAAS,GAAK,KAAK,WAC5DH,SAASC,cAAc,UAAUC,QAAQ,CAAEC,QAAS,GAAK,KACzDH,SAASC,cAAc,UAAUG,KAAK,EAAKtB,e,oBAI/C,WACI,OACE,yBAAKuB,GAAG,aAAaC,MAAO,CAACC,gBAAiBlB,KAAKjB,MAAMC,QACvD,yBAAKmC,UAAU,QACb,wBAAIH,GAAG,QAAQC,MAAO,CAACjC,MAAOgB,KAAKjB,MAAMC,QAASgB,KAAKjB,MAAMM,OAC7D,uBAAG2B,GAAG,SAASC,MAAO,CAACjC,MAAOgB,KAAKjB,MAAMC,QAASgB,KAAKjB,MAAMO,QAC7D,yBAAK6B,UAAU,WACb,4BAAQC,QAASpB,KAAKqB,UAAWJ,MAAO,CAACC,gBAAiBlB,KAAKjB,MAAMC,QAArE,aACA,4BAAQoC,QAASpB,KAAKT,OAAQ0B,MAAO,CAACC,gBAAiBlB,KAAKjB,MAAMC,QAAlE,oB,GAhDEsC,aAwDlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC5C,EAAD,OAEF8B,SAASe,eAAe,W","file":"static/js/main.1e4ac2bb.chunk.js","sourcesContent":["import { div } from 'prelude-ls';\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass App extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n      color: `RGB(${Math.floor(Math.random() * 100)}, ${Math.floor(Math.random() * 100)}, ${Math.floor(Math.random() * 100)})`,\r\n      quotes: [],\r\n      quote: '',\r\n      author: ''\r\n      }\r\n      this.button = this.button.bind(this);\r\n      this.rQuote = this.rQuote.bind(this);\r\n      this.setQuotes = this.setQuotes.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n      fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json')\r\n        .then(response => response.json())\r\n        .then(data => this.setQuotes(data));\r\n    }\r\n\r\n    setQuotes(data){\r\n      this.setState({quotes : data.quotes})\r\n      console.log(this.state.quotes) \r\n    }\r\n      \r\n    rQuote(){\r\n      let allQuotes = this.state.quotes.map(x => x.quote)\r\n      let allAuthors = this.state.quotes.map(x => x.author)\r\n      let random = Math.floor(Math.random() * allQuotes.length)\r\n      this.setState({quote: allQuotes[random], author: allAuthors[random]})\r\n    }\r\n\r\n    button(e){\r\n      e.preventDefault();\r\n      document.querySelector('#quote').animate({ opacity: 0 }, 500, () => {\r\n        document.querySelector('#quote').animate({ opacity: 1 }, 500);\r\n        document.querySelector('#quote').text(this.rQuote());\r\n      });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n          <div id='background' style={{backgroundColor: this.state.color}}>\r\n            <div className='card'>\r\n              <h1 id='quote' style={{color: this.state.color}}>{this.state.quote}</h1>\r\n              <p id='author' style={{color: this.state.color}}>{this.state.author}</p>\r\n              <div className='buttons'>\r\n                <button onClick={this.getQuotes} style={{backgroundColor: this.state.color}}>Get quote</button>\r\n                <button onClick={this.button} style={{backgroundColor: this.state.color}}>Get quote</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}